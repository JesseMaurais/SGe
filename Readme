SoftGeometry is a cross platform 3D graphics engine written in C++ and Lua
using OpenGL and SDL2. Features a binary space partitioning algorithm,
multithreading, occlusion culling, scalable vector graphics, font rendering,
streaming audio, support for several geometry file formats, mesh tesselation,
event driven scripting, and physical simulation.

SGe intends to be a general platform for visual and numerical computing. Plans
include support for the OpenCL computing language and OpenGL shading language
within the Lua script itself, by exporting the C++ code using my other project,
Lux. Using expat to parse XML files, SGe will also support a minimalist user
interface description. Multithreading support will be added to BSP algorithm
to leverage paralellism when compiling large meshes.

Finally, the intention is to rewrite much of the code that involves OpenGL to
target the latest (4.x) series of graphics cards. But this has to wait until
I have the funds to buy newer hardware.
