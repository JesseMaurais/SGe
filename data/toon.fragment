varying vec3 Normal;
varying vec3 Vertex;

void main(void)
{
	vec4 color0 = vec4(0.8, 0.0, 0.0, 1.0);
	vec4 color1 = vec4(0.0, 0.0, 0.0, 1.0);
	vec4 color2 = vec4(0.8, 0.0, 0.0, 1.0);

	vec3 eyePosition = vec3(0.0, 0.0, 5.0);
	vec3 lightPosition = vec3(0.0, 5.0, 5.0);

	vec3 normal = normalize(gl_NormalMatrix * Normal);
	vec3 eye = normalize(eyePosition - Vertex);
	vec3 light = normalize(lightPosition - Vertex);
	vec3 direction = normalize(light + eye);

	float silhouette = max(dot(normal, eye), 0.0);
	if (silhouette < 0.3)
		gl_FragColor = color1;
	else
	{
		gl_FragColor = color0;

		float specular = pow(max(dot(normal, direction), 0.0), 20.0);
		if (specular < 0.2)
			gl_FragColor *= 0.8;
		else
			gl_FragColor = color2;

		float diffuse = max(dot(normal, light), 0.0);
		if (diffuse < 0.5)
			gl_FragColor *= 0.8;
	}
}

